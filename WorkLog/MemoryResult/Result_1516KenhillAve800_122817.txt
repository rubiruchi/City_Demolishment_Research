Configured osmnx
Geocoded "1516 Kenhill Ave, Baltimore, MD" to (39.3086738, -76.5779359483561)
Projected the GeoDataFrame "geometry to project" to UTM-18 in 0.00 seconds
Projected the GeoDataFrame "geometry to project" to EPSG 4326 in 0.00 seconds
Created bounding box 1000 meters in each direction from (39.3086738, -76.5779359483561): 39.3176812459,39.2996663392,-76.5663413028,-76.5895305032
Projected the GeoDataFrame "geometry to project" to UTM-18 in 0.00 seconds
Projected the GeoDataFrame "geometry to project" to EPSG 4326 in 0.00 seconds
Projected the GeoDataFrame "geometry to project" to UTM-18 in 0.00 seconds
Projected the GeoDataFrame "geometry to project" to EPSG 4326 in 0.00 seconds
Requesting network data within bounding box from API in 1 request(s)
Retrieved response from cache file "cache/0601b6c997ca3ec5684be61d08311fc9.json" for URL "http://www.overpass-api.de/api/interpreter?data=%5Bout%3Ajson%5D%5Btimeout%3A180%5D%3B%28way%5B%22highway%22%5D%5B%22area%22%21~%22yes%22%5D%5B%22highway%22%21~%22cycleway%7Cmotor%7Cproposed%7Cconstruction%7Cabandoned%7Cplatform%7Craceway%22%5D%5B%22foot%22%21~%22no%22%5D%5B%22service%22%21~%22private%22%5D%5B%22access%22%21~%22private%22%5D%2839.29516190%2C-76.59532941%2C39.32218566%2C-76.56054235%29%3B%3E%3B%29%3Bout%3B"
Got all network data within bounding box from API in 1 request(s) and 0.05 seconds
Creating networkx graph from downloaded OSM data...
Graph was not connected, retained only the largest weakly connected component (4,967 of 5,067 total nodes) in 0.32 seconds
Created graph with 4,967 nodes and 12,994 edges in 0.57 seconds
Added edge lengths to graph in 0.08 seconds
Truncated graph by bounding box in 0.43 seconds
Begin topologically simplifying the graph...
Identified 2,559 edge endpoints in 0.09 seconds
Constructed all paths to simplify in 0.02 seconds
Simplified graph (from 4,967 to 2,559 nodes and from 12,994 to 8,178 edges) in 0.46 seconds
Truncated graph by bounding box in 0.38 seconds
Removed 3 isolated nodes
Graph was not connected, retained only the largest weakly connected component (1,087 of 1,111 total nodes) in 0.10 seconds
Got the counts of undirected street segments incident to each node (before removing peripheral edges) in 0.33 seconds
graph_from_bbox() returning graph with 1,087 nodes and 3,514 edges
graph_from_point() returning graph with 1,087 nodes and 3,514 edges
graph_from_address() returning graph with 1,087 nodes and 3,514 edges
Created a GeoDataFrame from graph in 0.09 seconds
Projected the GeoDataFrame "unnamed_nodes" to UTM-18 in 0.07 seconds
Projected the GeoDataFrame "unnamed_edges" to UTM-18 in 0.24 seconds
Extracted projected node geometries from GeoDataFrame in 0.03 seconds
Rebuilt projected graph in 0.73 seconds
Created GeoDataFrame "unnamed_nodes" from graph in 0.07 seconds

Vacant Set: VacantSet-OSMNX/vacantOSMNX_1516KenhillAve800_122817 

Geocoded "1516 Kenhill Ave, Baltimore, MD" to (39.3086738, -76.5779359483561)
Projected the GeoDataFrame "geometry to project" to UTM-18 in 0.00 seconds
Projected the GeoDataFrame "geometry to project" to EPSG 4326 in 0.00 seconds
Created bounding box 800 meters in each direction from (39.3086738, -76.5779359483561): 39.3158797579,39.3014678326,-76.5686602391,-76.5872115995
Projected the GeoDataFrame "geometry to project" to UTM-18 in 0.00 seconds
Projected the GeoDataFrame "geometry to project" to EPSG 4326 in 0.00 seconds
Requesting building footprints data within bounding box from API in 1 request(s)
Retrieved response from cache file "cache/86341a8e78cbd34feb134f968aaf42c7.json" for URL "http://www.overpass-api.de/api/interpreter?data=%5Bout%3Ajson%5D%5Btimeout%3A180%5D%3B%28%28way%5B%22building%22%5D%2839.30146783%2C-76.58721160%2C39.31587976%2C-76.56866024%29%3B%28._%3B%3E%3B%29%3B%29%3B%28relation%5B%22building%22%5D%2839.30146783%2C-76.58721160%2C39.31587976%2C-76.56866024%29%3B%28._%3B%3E%3B%29%3B%29%29%3Bout%3B"
Got all building footprints data within bounding box from API in 1 request(s) and 0.15 seconds

GEOdataframe get: 1.70578193665  s
list size(gdf)  : (4753, 30)
size(byte)      : 6369206  bytes 


.............................initial_housetype......................................
Projected the GeoDataFrame "unnamed" to UTM-18 in 3.18 seconds
Projected the GeoDataFrame "unnamed" to UTM-18 in 3.24 seconds
House type GEOdataframe get: 78.90290308  s
list size(gdf_proj)        : (4753, 31)
size(byte)                 : 6407230  bytes 


.............................initial_storytype..................................

.............................GetEdgeSet_OSMNX...................................
EdgeSet from : EdgeSet-OSMNX/EdgeOSMNX_1516KenhillAve800_122817
Edge set get   : 0.0827348232269  s
list size(edge): 3238
size(byte)     : 26744  bytes 


............................Get Houses,Renters,Owners,Vacants......................................
Houses_Renter_Owner_VacantSet get: 0.0963990688324  s
Houses :  4743  bytes:  42800  bytes
Renters:  3892  bytes:  33936  bytes
Owners :  0  bytes:  72  bytes
Vacants:  353  bytes:  2904  bytes 


.............................set_budget................................................
Budget set get        : 0.643929004669  s
Cost:  4743  bytes:  38224
Wall:  9714  bytes:  80232
Benefit:  3238  bytes:  26744

.............................GetCompareHousesSet_OSMNX..............................
Compare set get        : 0.21662902832  s
list size(comparehouse): 1373876
size(byte)             : 11007840  bytes 


.............................add constraint for bigM variables..................
Constraint for BigM get:  270.034569979  s
Optimize a model with 27057 rows, 15111 columns and 247802 nonzeros
Variable types: 3892 continuous, 11219 integer (11219 binary)
Coefficient statistics:
  Matrix range     [4e-03, 1e+05]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [5e-03, 5e+05]
Found heuristic solution: objective -1663.3
Presolve removed 2462 rows and 1066 columns
Presolve time: 0.51s
Presolved: 24595 rows, 14045 columns, 241198 nonzeros
Variable types: 3824 continuous, 10221 integer (10157 binary)

Root relaxation: objective -1.520905e+03, 5844 iterations, 0.47 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0 -1520.9048    0    4 -1663.3040 -1520.9048  8.56%     -    1s
H    0     0                    -1523.484731 -1520.9048  0.17%     -    1s
H    0     0                    -1521.431187 -1520.9048  0.03%     -    1s
     0     0 -1520.9250    0    9 -1521.4312 -1520.9250  0.03%     -    1s
     0     0 -1520.9250    0    1 -1521.4312 -1520.9250  0.03%     -    1s
     0     0 -1520.9250    0    2 -1521.4312 -1520.9250  0.03%     -    1s
     0     0 -1520.9278    0    3 -1521.4312 -1520.9278  0.03%     -    1s
H    0     0                    -1521.181750 -1520.9278  0.02%     -    1s
     0     0 -1520.9278    0    1 -1521.1818 -1520.9278  0.02%     -    1s
H    0     0                    -1521.004267 -1520.9278  0.01%     -    1s

Explored 0 nodes (5873 simplex iterations) in 1.60 seconds
Thread count was 4 (of 4 available processors)

Solution count 5: -1521 -1521.18 -1521.43 ... -1663.3
Pool objective bound -1520.93

Optimal solution found (tolerance 1.00e-04)
Best objective -1.521004267293e+03, best bound -1.520927836790e+03, gap 0.0050%

.............................plot....................................................
Projected the GeoDataFrame "unnamed" to UTM-18 in 3.08 seconds
Geocoded "1516 Kenhill Ave, Baltimore, MD" to (39.3086738, -76.5779359483561)
Projected the GeoDataFrame "geometry to project" to UTM-18 in 0.00 seconds
Projected the GeoDataFrame "geometry to project" to EPSG 4326 in 0.00 seconds
Created bounding box 960.0 meters in each direction from (39.3086738, -76.5779359483561): 39.3173209484,39.3000266379,-76.5668050903,-76.5890667228
Projected the GeoDataFrame "geometry to project" to UTM-18 in 0.00 seconds
Projected the GeoDataFrame "geometry to project" to EPSG 4326 in 0.00 seconds
Requesting network data within bounding box from API in 1 request(s)
Retrieved response from cache file "cache/bcbbdd41ff5b91acd2a013b12eddc045.json" for URL "http://www.overpass-api.de/api/interpreter?data=%5Bout%3Ajson%5D%5Btimeout%3A180%5D%3B%28way%5B%22highway%22%5D%5B%22area%22%21~%22yes%22%5D%5B%22highway%22%21~%22cycleway%7Cmotor%7Cproposed%7Cconstruction%7Cabandoned%7Cplatform%7Craceway%22%5D%5B%22foot%22%21~%22no%22%5D%5B%22service%22%21~%22private%22%5D%5B%22access%22%21~%22private%22%5D%2839.30002664%2C-76.58906672%2C39.31732095%2C-76.56680509%29%3B%3E%3B%29%3Bout%3B"
Got all network data within bounding box from API in 1 request(s) and 0.02 seconds
Creating networkx graph from downloaded OSM data...
Graph was not connected, retained only the largest weakly connected component (2,207 of 2,315 total nodes) in 0.12 seconds
Created graph with 2,207 nodes and 5,714 edges in 0.16 seconds
Added edge lengths to graph in 0.03 seconds
Truncated graph by bounding box in 0.17 seconds
Removed 0 isolated nodes
Graph was not connected, retained only the largest weakly connected component (1,732 of 1,735 total nodes) in 0.10 seconds
graph_from_bbox() returning graph with 1,732 nodes and 4,730 edges
graph_from_point() returning graph with 1,732 nodes and 4,730 edges
graph_from_address() returning graph with 1,732 nodes and 4,730 edges
Begin topologically simplifying the graph...
Identified 1,144 edge endpoints in 0.03 seconds
Constructed all paths to simplify in 0.00 seconds
Simplified graph (from 1,732 to 1,144 nodes and from 4,730 to 3,554 edges) in 0.09 seconds
Created a GeoDataFrame from graph in 0.08 seconds
Projected the GeoDataFrame "unnamed_nodes" to UTM-18 in 0.08 seconds
Projected the GeoDataFrame "unnamed_edges" to UTM-18 in 0.23 seconds
Extracted projected node geometries from GeoDataFrame in 0.03 seconds
Rebuilt projected graph in 0.80 seconds
Projected the GeoDataFrame "geometry to project" to UTM-18 in 0.00 seconds
Created bounding box 800 meters in each direction from (39.3086738, -76.5779359483561) and projected it: 4353018.27799,4351418.27799,364755.98746,363155.98746
Begin plotting the graph...
Drew the graph edges in 0.04 seconds
Saved the figure to disk in 0.19 seconds
drawing time: 92.0167069435  s 

['Budget : 500000.0   number of houses : 32.0   ObjVal : -1521.00426729   Running Time : 1.6032640934']
mprof: Sampling memory every 0.1s
running as a Python program...
